commit fdd140433c916589ed22aab02c057af3b7a7a04b
Author: Alexander Potapenko <glider@google.com>
Date:   Thu Sep 22 17:16:48 2016 +0200

    Use container_of_safe in include/linux/llist.h

diff --git a/include/linux/llist.h b/include/linux/llist.h
index fd4ca0b..d8fba49 100644
--- a/include/linux/llist.h
+++ b/include/linux/llist.h
@@ -85,7 +85,7 @@ static inline void init_llist_head(struct llist_head *list)
  * @member:	the name of the llist_node within the struct.
  */
 #define llist_entry(ptr, type, member)		\
-	container_of(ptr, type, member)
+	container_of_safe(ptr, type, member)
 
 /**
  * llist_for_each - iterate over some deleted entries of a lock-less list
@@ -121,7 +121,7 @@ static inline void init_llist_head(struct llist_head *list)
  */
 #define llist_for_each_entry(pos, node, member)				\
 	for ((pos) = llist_entry((node), typeof(*(pos)), member);	\
-	     &(pos)->member != NULL;					\
+	     pos != NULL && &(pos)->member != NULL;			\
 	     (pos) = llist_entry((pos)->member.next, typeof(*(pos)), member))
 
 /**
@@ -143,7 +143,7 @@ static inline void init_llist_head(struct llist_head *list)
  */
 #define llist_for_each_entry_safe(pos, n, node, member)			       \
 	for (pos = llist_entry((node), typeof(*pos), member);		       \
-	     &pos->member != NULL &&					       \
+	     pos != NULL && &pos->member != NULL &&			       \
 	        (n = llist_entry(pos->member.next, typeof(*n), member), true); \
 	     pos = n)
 
